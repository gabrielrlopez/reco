{"version":3,"sources":["actions/types.js","components/auth/Register.js","actions/alert.js","components/auth/Login.js","components/layout/Navbar.js","components/layout/Alert.js","components/layout/Home.js","components/layout/Landing.js","components/layout/Books.js","reducers/alert.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","connect","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","useState","firstName","lastName","email","password","passwordConfirm","formData","setFormData","onChange","e","target","value","Form","onSubmit","preventDefault","Group","Label","Control","placeholder","Text","className","Button","variant","Login","a","formInputs","config","headers","axios","post","console","log","response","data","controlId","Check","label","navbar","Navbar","bg","Brand","href","Nav","Link","state","alerts","alert","length","map","Alert","Home","Landing","Books","searchInput","setSearchInput","searchResults","setSearchResults","searchGoogleBooks","input","get","process","books","book","volumeInfo","title","authors","publisher","publishedDate","description","pageCount","genre","categories","averageRating","maturityRating","cover","imageLinks","previewLink","bookResults","filter","undefined","Container","Row","Col","size","CardColumns","thumbnail","Card","border","style","width","Body","Header","Title","src","padding","marginRight","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f916bd.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'","import {React, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {setAlert} from '../../actions/alert'\r\nimport  PropTypes from 'prop-types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nfunction Register({setAlert}) {\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n    })\r\n\r\n    const {firstName, lastName, email, password, passwordConfirm} = formData\r\n\r\n    const onChange = (e) => setFormData({...formData, [e.target.id]: e.target.value})\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (password !== passwordConfirm)\r\n        setAlert('Passwords do not match!', 'danger', 3000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign Up</h1>\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n\r\n              <Form.Group>\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"First\" id=\"firstName\" value={firstName} onChange={e => onChange(e)}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Last\" id=\"lastName\" value={lastName} onChange={e => onChange(e)}/>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Email Adress</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"test@provider.com\" id=\"email\" value={email} onChange={e => onChange(e)}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" value={password} onChange={e => onChange(e)}/>\r\n              </Form.Group>\r\n\r\n\r\n              <Form.Group>\r\n                <Form.Label>Confirm Your Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Retype Password\" id=\"passwordConfirm\" value={passwordConfirm} onChange={e => onChange(e)}/>\r\n              </Form.Group>\r\n\r\n              <Button variant=\"outline-info\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {setAlert})(Register)\r\n","import {v4 as uuidv4} from 'uuid'\r\nimport {SET_ALERT, REMOVE_ALERT} from './types'\r\n\r\n//thunk\r\nexport const setAlert = (msg, alertType, timeout) => dispatch =>  {\r\n    const id = uuidv4()\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    })\r\n\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout)\r\n}","import {React, useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport axios from 'axios'\r\n \r\n\r\nfunction Login() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = (e) => setFormData({...formData, [e.target.id]: e.target.value})\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const formInputs = {\r\n            email,\r\n            password\r\n        }\r\n        try {\r\n            const config ={ \r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            await axios.post('/api/users/login', formInputs, config)\r\n        } catch (error) {\r\n            console.log(error.response.data);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <Form onSubmit={onSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control id=\"email\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => onChange(e)}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={e => onChange(e)}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n              </Form.Group>\r\n              <Button variant=\"outline-info\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nfunction navbar() {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n              <Navbar.Brand href=\"/\">Reco</Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                <Nav.Link href=\"/register\">Register</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"outline-primary\">Search</Button>\r\n              </Form> */}\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Alerting = ({alerts}) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    <Alert key={alert.id} variant={alert.alertType}>\r\n        {alert.msg}\r\n    </Alert>\r\n))\r\n\r\nAlerting.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\nexport default connect(mapStateToProps)(Alerting)\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h1>This is the home page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './styles/Landing.css'\r\n\r\nfunction Landing() {\r\n    return (\r\n        <div>\r\n            <h1>Welcome to Reco! Where your friend has a new experience waiting for you!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/esm/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport axios from 'axios'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Container from 'react-bootstrap/esm/Container'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\n\r\n\r\nfunction Books() {\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [searchResults, setSearchResults] = useState([])\r\n\r\n    const onChange = (e) => setSearchInput(e.target.value)\r\n\r\n    const searchGoogleBooks = async (input) => {\r\n       const data = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${input}&maxResults=10&key=${process.env.REACT_APP_BOOK_API_KEY}`)\r\n       const books = data.data['items'].map(book => {\r\n            const {volumeInfo} = book\r\n            book = {\r\n                title: volumeInfo.title,\r\n                authors: volumeInfo.authors,\r\n                publisher: volumeInfo.publisher,\r\n                publishedDate: volumeInfo.publishedDate,\r\n                description: volumeInfo.description,\r\n                pageCount: volumeInfo.pageCount,\r\n                genre: volumeInfo.categories,\r\n                averageRating: volumeInfo.averageRating,\r\n                maturityRating: volumeInfo.maturityRating,\r\n                cover: volumeInfo.imageLinks,\r\n                previewLink: volumeInfo.previewLink\r\n            }\r\n            return book\r\n       })\r\n       const bookResults = books.filter(book => book.cover !== undefined )\r\n       setSearchResults(bookResults)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        searchGoogleBooks(searchInput)\r\n    }\r\n\r\n    console.log(searchResults)\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Recommend a book to a friend, or add it to your library of favorites.</h1>\r\n            <h2>Haven't read it? Add it to your \"read it later\" library!</h2>\r\n            <br></br>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col>\r\n                    <Form.Control size=\"lg\" type=\"text\" placeholder=\"Search books by author or title\" id=\"searchInput\" value={searchInput} onChange={e => onChange(e)} />\r\n                    </Col>\r\n                    <Col>\r\n                    <Button type=\"submit\" className=\"mb-2\" variant=\"outline-success\">\r\n                      Search\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <br></br>\r\n        <CardColumns>\r\n            {searchResults.map(book => {\r\n                const {thumbnail} = book.cover\r\n                return <Card \r\n                border=\"secondary\"\r\n                style={{width: '18rem'}}\r\n                className='text-center'\r\n                >\r\n                    <Card.Body>\r\n                        <Card.Header>\r\n                            {book.title}\r\n                        </Card.Header>\r\n                        <Card.Title>\r\n                            {book.authors}\r\n                        </Card.Title>\r\n                        <Card.Body>\r\n                            <img src={thumbnail}/>\r\n                            <Container>\r\n                            <Row \r\n                            className=\"justify-content-md-center\"\r\n                            style={{padding: '5px'}}\r\n                            >\r\n                                <Button style={{marginRight: '5px'}} variant=\"primary\">Favorite</Button>\r\n                                <Button variant=\"primary\">Read later</Button>\r\n                            </Row>\r\n                            <Button variant=\"danger\">Reco a friend</Button>\r\n                            </Container>\r\n                        </Card.Body>\r\n                    </Card.Body>    \r\n                </Card>\r\n            })}\r\n        </CardColumns>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Books\r\n","import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload)\r\n        default: \r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport alert from './alert'\r\n\r\nexport default combineReducers({\r\n    alert,\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\n// let currentState = store.getState();\r\n\r\n// store.subscribe(() => {\r\n//   // keep track of the previous and current state to compare changes\r\n//   let previousState = currentState;\r\n//   currentState = store.getState();\r\n//   // if the token changes set the value in localStorage and axios headers\r\n//   if (previousState.auth.token !== currentState.auth.token) {\r\n//     const token = currentState.auth.token;\r\n//     setAuthToken(token);\r\n//   }\r\n// })\r\n\r\nexport default store","import { Fragment } from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport Navbar from './components/layout/Navbar'\nimport Alert from './components/layout/Alert'\nimport Home from './components/layout/Home'\nimport Landing from './components/layout/Landing'\nimport Books from './components/layout/Books'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//Redux\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nconst App = () => (\n    <Provider store={store}>\n        <Navbar />\n        <Alert />\n        <BrowserRouter>\n              <Route exact path='/' component={Landing}/>\n              <Route exact path='/register' component={Register}/>\n              <Route exact path='/login' component={Login}/>\n              <Route exact path='/home' component={Home}/>\n              <Route exact path='/profile' component={Login}/>\n              <Route exact path='/books' component={Books}/>\n        </BrowserRouter>\n    </Provider>\n)\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}